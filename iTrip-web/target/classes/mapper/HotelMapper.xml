<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.itrip.mapper.HotelMapper">
	<!-- hotel 表 -->
	<resultMap type="org.itrip.pojo.Hotel" id="DaseResultMap2">
		<id property="id" column="id" jdbcType="INTEGER" />
		<result property="hotelName" column="hotelName"
			jdbcType="INTEGER" />
		<result property="phone" column="phone" jdbcType="VARCHAR" />
		<result property="address" column="address" jdbcType="VARCHAR" />
		<result property="roomAlias" column="alias" jdbcType="VARCHAR" />
		<result property="details" column="details" jdbcType="VARCHAR" />
		<result property="score" column="score" jdbcType="DOUBLE" />
		<result property="cityName" column="cityName"
			jdbcType="VARCHAR" />
	</resultMap>
	<!-- Houses 表 -->
	<resultMap type="org.itrip.pojo.Houses" id="HousesResultMap">
		<result property="valueName" column="valueName"
			jdbcType="VARCHAR" />
		<result property="hotelName" column="hotelName"
			jdbcType="VARCHAR" />
		<result property="roomTitle" column="roomTitle"
			jdbcType="VARCHAR" />
		<result property="price" column="price" jdbcType="VARCHAR" />
		<result property="isbreakfast" column="isbreakfast"
			jdbcType="INTEGER" />
		<result property="cancellationPolicy"
			column="cancellationPolicy" jdbcType="INTEGER" />
		<result property="number" column="number" jdbcType="INTEGER" />

	</resultMap>

	<!-- =======================邹航开始=========================== -->
	<!-- 根据首页值查询酒店信息 -->
	<select id="query" resultType="Hotel" parameterType="Map">
		select
		hotelName,countryid,t.valueName
		alias,address,photograph,hotelType,score,MIN(price) minimum,s.id
		from
		hotel s,hotelbrand h,dictionaries t,citys c,houses ho,rooms r where
		s.hotelType=t.valueId and
		c.id=h.citysid and s.countryid=c.id and
		t.typeName="酒店类型" and ho.hotelId=s.id and r.houseId=ho.id and
		countryid=#{countryid}
		GROUP
		BY hotelName
		LIMIT
		#{currentPageNo},#{pageSize}
	</select>

	<!-- 根据条件查询酒店总记录数 -->
	<select id="hotelCount" resultType="Integer">
		select count(1) from hotel h
		INNER JOIN citys c on h.countryid=c.id
		where h.countryid=#{cid}
	</select>

	<!-- 根据城市名称查询城市id -->
	<select id="queryName" resultType="Integer">
		select id from citys where
		name=#{names}
	</select>

	<!-- 二级页面根据条件查询酒店总记录 -->
	<select id="hotelTotalCount" resultType="Integer">
		select count(1) from (select
		hotelName,countryid,ho.hotelId,t.valueName
		alias,address,photograph,hotelType,score,min(price)
		minimum,s.id,s.brandId
		from
		hotel s,hotelbrand h,dictionaries t,citys
		c,houses ho,rooms r where
		s.hotelType=t.valueId and
		c.id=h.citysid and
		s.countryid=c.id and r.houseId=ho.id and t.typeName="酒店类型" and
		ho.hotelId=s.id
		<if test="brand!=0">
			and h.id=#{brand} and s.brandId=#{brand}
		</if>
		<if test="rating!=0">
			and s.hotelType=#{rating}
		</if>
		<if test="cid!=0">
			and countryid=#{cid}
		</if>
		<if test="keyword!='' and keyword!=null">
			and hotelName LIKE CONCAT('%',#{keyword},'%')
		</if>
		and roomPrice BETWEEN #{price1} and #{price2}
		GROUP BY hotelName
		<if test="rankts==1">
			ORDER BY minimum
		</if>
		) a
	</select>

	<!-- 二级页面上版根据条件查询酒店信息 -->
	<!-- price1:价格下限;price2价格上限;brand品牌Id;rating星级id;cid目的地id;keyword关键字 -->
	<select id="queryMap" parameterType="Map" resultType="Hotel">
		select hotelName,countryid,ho.hotelId,t.valueName
		alias,address,photograph,hotelType,score,min(price)
		minimum,s.id,s.brandId
		from
		hotel s,hotelbrand h,dictionaries t,citys
		c,houses ho,rooms r where
		s.hotelType=t.valueId and
		c.id=h.citysid and
		s.countryid=c.id and r.houseId=ho.id and t.typeName="酒店类型" and
		ho.hotelId=s.id
		<if test="brand!=0">
			and h.id=#{brand} and s.brandId=#{brand}
		</if>
		<if test="rating!=0">
			and s.hotelType=#{rating}
		</if>
		<if test="cid!=0">
			and countryid=#{cid}
		</if>
		<if test="keyword!='' and keyword!=null">
			and hotelName LIKE CONCAT('%',#{keyword},'%')
		</if>
		and roomPrice BETWEEN #{price1} and #{price2}
		GROUP BY hotelName
		<if test="rankts==1">
			ORDER BY minimum
		</if>
		LIMIT
		#{currentPageNo},#{pageSize}
	</select>

	<!-- 查询最低的酒店套餐价格 -->
	<!-- <select id="queryMinPrice" resultType="Rooms"> select MIN(price) as 
		price from rooms where hotelId=#{hotelId} </select> -->

	<!-- 根据id查询城市名称 -->
	<select id="queryCid" resultType="String">
		select name from
		citys where
		id=#{cid}
	</select>
	<!-- 根据城市id查询品牌 -->
	<select id="queryBrand" resultType="Hotelbrand">
		select id,brandName,citysid
		from hotelbrand
		where citysid=#{citysid}
	</select>
	<!-- 查询字典表的酒店类型 -->
	<select id="queryDictionaries" resultType="Dictionaries">
		select
		id,typeName,valueId,valueName from dictionaries
		<if test="type!=null">where typeName=#{type}</if>
	</select>
	<!-- =======================邹航结束=========================== -->

	<!-- =======================谭凯开始=========================== -->
	<!-- 查询酒店详细信息 -->
	<select id="getHotelDatail" resultMap="DaseResultMap2">
		select *,(select valueName
		from dictionaries t where
		s.hotelType=t.valueId and t.typeName="酒店类型")
		alias,(SELECT name FROM citys c WHERE c.id=s.countryid) cityName
		from
		hotel s where id=#{id}
	</select>
	<!-- 查询酒店房型 -->
	<select id="getHotelRoom" resultMap="HousesResultMap">
		select s.id,d.valueName
		valueName,s.roomSize,s.BedArea,s.floor,s.isHavingbed,s.window,s.roomImage,s.ceiling,s.inventory
		from houses s
		,dictionaries d where s.roomNameId= d.valueId
		and
		d.typeName="房型" and s.hotelId=#{id}
	</select>
	<!-- 查询酒店名称下分类价格 -->
	<select id="getHouses" resultType="Rooms">
		select
		r.id,r.houseId,r.roomTitle,r.isbreakfast,r.cancellationPolicy,
		r.Price
		from
		houses h,rooms r
		where r.hotelId =
		h.id and r.houseId =#{id}
	</select>

	<!-- =======================谭凯结束=========================== -->

	<!-- 后台查询所有酒店相关信息 -->
	<select id="getAllHotel" resultType="Hotel">
		select hb.brandName,h.* from
		hotel h,hotelbrand hb where h.brandId = hb.id
	</select>

	<!-- 查询酒店类型 -->
	<select id="getHotelType" resultType="Dictionaries">
		select
		id,typeName,valueId,valueName from dictionaries where typeName='酒店类型'
	</select>

	<!-- 查询所有省份 -->
	<select id="getProvinces" resultType="Provinces">
		select id, name from
		provinces
	</select>

	<!-- 根据省份id查询城市 -->
	<select id="getCitysById" resultType="Citys">
		select id,name,provinceId
		from citys where provinceId= #{pId}
	</select>

	<!-- 添加酒店信息 -->
	<insert id="addHotelInfo" parameterType="Hotel"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		hotel(hotelName,countryid,provinceid,address,details,hotelPolicy,hotelType,phone,photograph,facilitiesName,hotelservices,brandId)
		values(#{hotelName},#{countryid},#{provinceid},#{address},#{details},#{hotelPolicy},#{hotelType},#{phone},#{photograph},#{facilitiesName},#{hotelservices},#{brandId})
	</insert>

	<!-- 查询房型 -->
	<select id="getRoomsType" resultType="Dictionaries">
		select
		id,typeName,valueId,valueName from dictionaries where typeName='房型'
	</select>

	<!-- 查询床型 -->
	<select id="getBeds" resultType="Beds">
		select id,type from beds
	</select>

	<!-- 添加房型信息 -->
	<insert id="addRoomsInfo" parameterType="Houses"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		houses(hotelId,roomNameId,roomPrice,roomSize,bedArea,floor,isHavingbed,window,roomImage,bedsId)
		values(#{hotelId},#{roomNameId},#{roomPrice},#{roomSize},#{bedArea},#{floor},#{isHavingbed},#{window},#{roomImage},#{bedsId})
	</insert>

	<!-- 添加一个房型套餐 -->
	<insert id="addRoomTitle" parameterType="Rooms">
		insert into
		rooms(hotelId,houseId,roomTitle,price,isbreakfast,cancellationPolicy)
		values(#{hotelId},#{houseId},#{roomTitle},#{price},#{isbreakfast},#{cancellationPolicy})
	</insert>

	<!-- 根据id查询房型 -->
	<select id="getHouseById" resultType="Houses">
		select
		houses.id,hotel.provinceid,hotel.countryid,hotel.hotelName,houses.roomNameId,houses.roomPrice,houses.roomSize,houses.inventory,
		houses.bedArea,houses.bedsId,houses.ceiling,houses.floor,houses.isHavingbed,houses.window,houses.roomImage
		from houses,hotel where houses.hotelId = hotel.id and
		houses.id=#{houseId}
	</select>

	<!-- 修改房型信息 -->
	<update id="updateHousesInfo" parameterType="Houses">
		update houses set
		roomNameId=#{roomNameId},roomPrice=#{roomPrice},roomSize=#{roomSize},roomsId=#{roomsId},bedArea=#{bedArea},ceiling=#{ceiling},floor=#{floor},isHavingbed=#{isHavingbed},window=#{window},roomImage=#{roomImage}
		where id=#{id}
	</update>

	<!-- 修改套餐价格 -->
	<update id="updateRoomPrice" parameterType="Rooms">
		update rooms set
		price=#{price} where houseId=#{houseId}
	</update>

	<!-- 根据id查询字典表信息 -->
	<select id="queryDicId" parameterType="Integer"
		resultType="Dictionaries">
		select id,typeName,valueId,valueName from dictionaries
		where id=#{id}
	</select>
	<!-- 判断字典表类型值是否存在 -->
	<select id="judge" parameterType="Dictionaries"
		resultType="Integer">
		select count(*) from dictionaries where
		typeName=#{typeName} and valueName
		=#{valueName}
	</select>
	<!-- 查询该类型最大值 -->
	<select id="queryDicz" parameterType="Dictionaries"
		resultType="Integer">
		select MAX(valueId) from dictionaries where
		typeName=#{typeName}
	</select>
	<!-- 添加字典类型值 -->
	<insert id="addDicz" parameterType="Dictionaries">
		insert into
		dictionaries(id,typeName,valueId,valueName)
		values(null,#{typeName},#{valueId},#{valueName});
	</insert>
	<!-- 修改字典类型值 -->
	<update id="updDicz" parameterType="Dictionaries">
		UPDATE dictionaries set
		valueName=#{valueName} where id=#{id}
	</update>

	<select id="queryDic" resultType="Dictionaries">
		select id,typeName from
		dictionaries GROUP BY typeName
	</select>
	<!-- 批量删除字典表类型值 -->
	<delete id="deleteDic">
		delete from dictionaries where id in
		<foreach collection="ids" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	<select id="queryCeil" resultType="Map">
		SELECT
		MONTH ( checkInDate ) as
		month,
		SUM( payAmount ) as sale,count(id) as orders
		FROM
		orders WHERE
		YEAR( checkInDate ) = #{year}
		GROUP BY
		MONTH ( checkInDate )
	</select>
	<!-- 修改酒店信息 -->
	<update id="updateHotel" parameterType="Hotel">
		update hotel set
		hotelName=#{hotelName},hotelType=#{hotelType},provinceid=#{provinceid},countryid=#{countryid},brandId=#{brandId},
		phone=#{phone},address=#{address},hotelPolicy=#{hotelPolicy},facilitiesName=#{facilitiesName},hotelservices=#{hotelservices},details=#{details},photograph=#{photograph}
		where id=#{id}
	</update>
	<!-- 查看全部的房型信息 -->
	<select id="getAllHouses" resultMap="HousesResultMap">
		select
		s.id,hotel.hotelName,d.valueName,
		s.roomPrice,s.roomSize,s.BedArea,s.floor,s.isHavingbed,s.window,s.roomImage
		from houses s,hotel,dictionaries d
		where s.hotelId = hotel.id and
		s.roomNameId= d.valueId
		and d.typeName="房型"
	</select>
	<delete id="deleteManyHotel">
		delete t1,t2,t3 from (hotel t1 left join houses t2 on
		t1.id=t2.hotelId) left join rooms t3 on t2.id=t3.houseId where t1.id
		in
		<foreach collection="id" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
	<select id="queryId" resultType="Hotel">
		select * from hotel where
		id=#{id}
	</select>
	<select id="queryRid" resultType="Rooms">
		select * from rooms where
		id=#{rid}
	</select>
	<select id="querySid" resultType="Houses">
		select * from houses
		s,dictionaries d where s.roomNameId = d.valueId and
		d.typeName='房型' and
		s.id=#{sid}
	</select>
	<!-- 前端修改密码 -->
	<update id="updPwd" parameterType="User">
		UPDATE user set pwd=#{pwd}
		where id= #{id}
	</update>
	<delete id="delOrderId">
		delete from orders where id=#{id}
	</delete>
	<!-- 根据用户ID查询订单信息 -->
	<select id="queryOrder" parameterType="Integer"
		resultType="Orders">
		select
		o.id,orderNo,count,o.creationDate,checkInDate,checkOutDate,h.hotelName,
		(SELECT valueName from dictionaries d WHERE s.roomNameId=d.valueId and
		typeName="房型") valueName,detailsImage1,
		(SELECT valueName from
		dictionaries d WHERE o.orderStatus = d.valueId and typeName="支付类型")
		payType,
		(SELECT valueName from dictionaries d WHERE o.orderStatus =
		d.valueId and typeName="订单状态")
		orderStatus,payAmount,o.hotelId,o.bookingDays,
		(SELECT valueName from
		dictionaries d WHERE o.payStatus = d.valueId and typeName="支付状态")
		payStatus
		from orders o,hotel h,houses s where o.hotelId=h.id and
		o.roomId=s.id and
		userId=#{userId} and
		o.creationDate &gt;
		date_sub(now(),interval 6
		month)
		ORDER
		BY o.creationDate DESC LIMIT
		#{currentPageNo},#{pageSize}
	</select>

	<!-- 根据用户id查询订单总记录数 -->
	<select id="hotelOrder" resultType="Integer">
		select count(id) from orders
		where userId=#{userId} and
		creationDate &gt; date_sub(now(),interval 6
		month)
	</select>

	<!-- 根据ID删除订单信息 -->
	<delete id="delOrder">
		delete FROM orders where id=#{id}
	</delete>
	<!-- 根据ID修改订单状态 -->
	<update id="updOrder">
		UPDATE orders set orderStatus=3 where id=#{id}
	</update>

	<!-- 用户评论 -->
	<select id="quComments" resultType="Comments">
		select
		s.id,s.hotelId,userImage,commentRank,`comment`,createDate,replyName,reply,linkUserName
		from comments s,orders o where s.orderId = o.id and
		s.hotelId=#{hotelId}
	</select>

	<!-- 查询订单 -->
	<select id="queryOrders" resultType="Orders" parameterType="Map">
		SELECT h.hotelName,(SELECT valueName FROM dictionaries d WHERE
		typeName='房型' and d.valueId = hs.roomNameId) roomName,
		o.* FROM orders
		o
		INNER JOIN hotel h on o.hotelId=h.id
		INNER JOIN houses hs on o.roomId
		=hs.id where 1=1
		<if test="creationDate != null and creationDate != '' ">
				<![CDATA[ and o.creationDate >= #{creationDate} ]]>
		</if>
		<if test="endDate != null  and endDate !=''">
				 <![CDATA[ and o.creationDate <= #{endDate} ]]>
		</if>
		<if test="linkUserName !='' and linkUserName != null">
			and o.linkUserName LIKE '%${linkUserName}%'
		</if>
	</select>

	<!-- 查询订单总数 -->
	<select id="ordersCount" parameterType="int"
		resultType="Integer">
		SELECT COUNT(1) FROM orders
	</select>

	<!-- 根据id查订单信息 -->
	<select id="ByIdOrders" resultType="Orders">
		SELECT h.hotelName,(SELECT
		valueName FROM dictionaries d WHERE typeName='房型' and d.valueId =
		hs.roomNameId) roomName,
		o.* FROM orders o
		INNER JOIN hotel h on
		o.hotelId=h.id
		INNER JOIN houses hs on o.roomId =hs.id
		WHERE o.id=#{id}
	</select>
	<select id="RoomName" resultType="Houses">
		SELECT (SELECT valueName FROM
		dictionaries d WHERE typeName='房型' and d.valueId = hs.roomNameId)
		valueName,hs.id FROM hotel h
		INNER JOIN houses hs ON h.id=hs.hotelId
		WHERE h.id=#{hotelId}
	</select>
	<!-- 根据id值修改订单 -->
	<update id="UpdateOrders" parameterType="Orders">
		UPDATE orders set
		orderNo=#{orderNo},hotelId=#{hotelId},roomId=#{roomId},`count`=#{count},checkInDate=#{checkInDate},
		checkOutDate=#{checkOutDate},linkUserName=#{linkUserName},payAmount=#{payAmount},noticePhone=#{noticePhone}
		WHERE id=#{id}
	</update>

	<select id="getMeal" resultType="Rooms">
		SELECT roomTitle,price FROM
		rooms WHERE houseId=#{houseId}
	</select>

	<!-- 新增订单 -->
	<insert id="addOrdres" parameterType="Orders"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		orders(userId,orderNo,hotelId,roomId,count,bookingDays,checkInDate,checkOutDate,orderStatus,payAmount,payType,noticePhone,noticeEmail,specialRequirement,linkUserName,roomsId,payStatus)
		values(#{userId},#{orderNo},#{hotelId},#{roomId},#{count},#{bookingDays},#{checkInDate},#{checkOutDate},#{orderStatus},#{payAmount},#{payType},#{noticePhone},#{noticeEmail},#{specialRequirement},#{linkUserName},#{roomsId},#{payStatus})
	</insert>

	<!-- 订单支付页面 根据id查询订单信息 -->
	<select id="getOrdersById" resultType="Orders">
		select
		o.id,o.userId,o.orderNo,o.count,o.bookingDays,o.checkInDate,o.checkOutDate,
		(select valueName from dictionaries where typeName='订单状态' and
		valueId=o.orderStatus) as orderStatus,
		o.payAmount,(select valueName
		from dictionaries where typeName='支付类型' and valueId=o.payType) as
		payType,
		o.noticePhone,o.linkUserName,o.creationDate,(select valueName
		from dictionaries where typeName='支付状态' and valueId=o.payStatus) as
		payStatus,
		hot.hotelName,hot.address,(select valueName from
		dictionaries where
		typeName='酒店类型' and valueId=hot.hotelType) as
		hotelType,hot.phone,
		hou.roomImage,d.valueName
		from orders o,hotel
		hot,houses
		hou,dictionaries d
		where o.hotelId = hot.id
		and o.roomId =
		hou.id
		and
		hou.roomNameId = d.valueId
		and d.typeName='房型' and o.id =
		#{ordersId}
	</select>

	<!-- 支付成功后修改订单状态 -->
	<update id="updateOderStatus" parameterType="Orders">
		update orders set
		payStatus=1,orderStatus=1,payType=1 where id=#{orderId}
	</update>

	<!-- 根据城市id查询酒店信息 -->
	<select id="getHotelById" resultType="Hotel">
		select * from hotel where
		provinceid=#{provinceid}
	</select>
	<select id="queryDate" resultType="Orders">
		select DATE_FORMAT(
		checkInDate, '%Y') as year from orders GROUP BY DATE_FORMAT(
		checkInDate, '%Y')
	</select>
	
	<select id="orderHousesNum" resultType="Integer">
		select SUM(count) from
		orders where roomId = #{roomId} and orderStatus &lt;&gt; 3
		and (date(checkInDate) &gt;= #{checkInDate} and date(checkOutDate)&lt;=
		#{checkOutDate})
		or (date(checkInDate) &gt; #{checkInDate} and date(checkOutDate)&lt;
		#{checkOutDate})
		or (date(checkInDate) &gt; #{checkInDate} and date(checkOutDate)&lt;
		#{checkOutDate})
	</select>
	<!-- 套餐查询 -->
	<select id="getRooms" resultType="Rooms">
		select * from rooms
	</select>
	
	<!-- 删除房型 -->
	<delete id="deleteManyHouses">
		delete  from houses where id in
		<foreach collection="id" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
		
	</delete>
</mapper>